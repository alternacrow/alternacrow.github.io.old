{"version":3,"sources":["webpack:///./src/views/organisms/modules/horizontal-scroll.tsx","webpack:///./src/views/organisms/modules/horizontal-scroll.sample.tsx","webpack:///./src/views/organisms/modules/modal.tsx","webpack:///./src/views/organisms/modules/modal.sample.tsx","webpack:///./src/pages/components.tsx"],"names":["HorizontalScroll","data","renderItem","Ul","map","item","i","Li","key","styled","ul","li","HorizontalScrollSample","Array","_","title","description","style","marginLeft","border","color","borderRadius","height","width","Modal","visible","onClickBlur","children","cancelEmitParentEvent","useCallback","e","stopPropagation","Container","onClick","ModalWrapper","div","blur","ModalSample","useState","isVisible","setVisible","handleClickModalButton","handleClickBlur","Button","type","ModalInner","CloseButton","className","Title","Description","button","primary","white","gray","p","GenericsComponentsPage","ComponentContainer","media","sp","h2"],"mappings":"uLAYaA,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAT,OACzC,kBAACC,EAAD,KACGF,EAAKG,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACC,EAAD,CAAIC,IAAKH,EAAKG,KAAMN,EAAWG,EAAMC,SAKrCH,EAAKM,IAAOC,GAAV,wEAAGD,CAAH,sNAcFF,EAAKE,IAAOE,GAAV,wEAAGF,CAAH,4CC7BKG,EAA6B,WACxC,IAAMX,EAAO,YAAIY,MAAM,KAAKT,KAAI,SAACU,EAAGR,GAAJ,MAAW,CACzCE,IAAK,qBAAqBF,EAC1BS,MAAO,UAAST,EAAI,GACpBU,YAAa,gBAAeV,EAAI,OAGlC,OACE,kBAAC,EAAD,CACEL,KAAMA,EACNC,WAAY,WAAyBI,GAAzB,IAAGS,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACV,wBACEC,MAAO,CACLC,WAAkB,IAANZ,EAAU,EAAI,EAC1Ba,OAAQ,aAAaC,IAAMD,OAC3BE,aAAc,EACdC,OAAQ,IACRC,MAAO,MAGT,4BAAKR,GACL,4BAAKC,QCjBFQ,EAAmB,SAAC,GAI3B,IAHJC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,aAEV,EADJC,EACI,EADJA,SAEMC,EAAwBC,uBAC5B,SAACC,GACCA,EAAEC,oBAEJ,IAEF,OACE,kBAACC,EAAD,CAAWP,QAASA,EAASQ,QAASP,GACpC,kBAACQ,EAAD,CAAcD,QAASL,GAAwBD,KAK/CK,EAAYvB,IAAO0B,IAAV,mEAAG1B,CAAH,+KASOW,IAAMgB,MAEf,qBAAGX,QAAyB,EAAI,KAChC,qBAAGA,QAAyB,MAAQ,KAG3CS,EAAezB,IAAO0B,IAAV,sEAAG1B,CAAH,MCpCL4B,EAAkB,WAAM,MACHC,oBAAS,GAAlCC,EAD4B,KACjBC,EADiB,KAG7BC,EAAyBZ,uBAAY,WACzCW,GAAW,KACV,IAEGE,EAAkBb,uBAAY,WAClCW,GAAW,KACV,IAEH,OACE,oCACE,kBAACG,EAAD,CAAQC,KAAK,SAASX,QAASQ,GAA/B,cAGA,kBAAC,EAAD,CAAOhB,QAASc,EAAWb,YAAagB,GACtC,kBAACG,EAAD,KACE,kBAACC,EAAD,CAAaC,UAAU,uBACvB,kBAACC,EAAD,cACA,kBAACC,EAAD,4BAOJN,EAASlC,IAAOyC,OAAV,sEAAGzC,CAAH,yFAEUW,IAAM+B,QAEjB/B,IAAMgC,OAIXP,EAAapC,IAAO0B,IAAV,0EAAG1B,CAAH,sLAYVqC,EAAcrC,IAAOyC,OAAV,2EAAGzC,CAAH,yGAMNW,IAAMiC,MAGXL,EAAQvC,IAAO6C,EAAV,qEAAG7C,CAAH,wDAMLwC,EAAcxC,IAAO6C,EAAV,2EAAG7C,CAAH,uDCvCXuB,GAFSuB,UAhB+B,kBAC5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxC,MAAM,eACX,kBAAC,EAAD,KACE,kBAACyC,EAAD,KACE,kBAAC,EAAD,0BACA,kBAAC,EAAD,OAEF,kBAACA,EAAD,KACE,kBAAC,EAAD,cACA,kBAAC,EAAD,UAQU/C,IAAO0B,IAAV,4EAAG1B,CAAH,6CAEXgD,IAAMC,KAKJF,EAAqB/C,IAAO0B,IAAV,qFAAG1B,CAAH,6BAMlBuC,EAAQvC,IAAOkD,GAAV,wEAAGlD,CAAH","file":"component---src-pages-components-tsx-a65cccde8ffeec7467fe.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\n\ntype Data<T> = T & {\n  key: string;\n};\ntype Props<T> = {\n  data: Data<T>[];\n  renderItem: (props: Data<T>, index: number) => ReactElement;\n};\ntype Component = <T>(props: Props<T>) => ReactElement<Props<T>>;\n\nexport const HorizontalScroll: Component = ({ data, renderItem }) => (\n  <Ul>\n    {data.map((item, i) => (\n      <Li key={item.key}>{renderItem(item, i)}</Li>\n    ))}\n  </Ul>\n);\n\nconst Ul = styled.ul`\n  box-sizing: border-box;\n  display: flex;\n  width: 100%;\n  overflow-x: scroll;\n  scroll-behavior: smooth;\n  -webkit-appearance: none;\n  scroll-snap-type: x mandatory;\n  -webkit-overflow-scrolling: touch;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Li = styled.li`\n  flex-shrink: 0;\n  -webkit-appearance: none;\n`;\n","import React, { FC } from 'react';\nimport { color } from '../../../assets/styles';\n\nimport { HorizontalScroll } from './horizontal-scroll';\n\nexport const HorizontalScrollSample: FC = () => {\n  const data = [...Array(10)].map((_, i) => ({\n    key: `horizontal-scroll ${i}`,\n    title: `title ${i + 1}`,\n    description: `description ${i + 1}`,\n  }));\n\n  return (\n    <HorizontalScroll\n      data={data}\n      renderItem={({ title, description }, i) => (\n        <dl\n          style={{\n            marginLeft: i === 0 ? 0 : 8,\n            border: `1px solid ${color.border}`,\n            borderRadius: 8,\n            height: 100,\n            width: 200,\n          }}\n        >\n          <dt>{title}</dt>\n          <dd>{description}</dd>\n        </dl>\n      )}\n    />\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { color } from '../../../assets/styles';\n\ntype Props = {\n  visible: boolean;\n  onClickBlur?: () => void;\n};\n\nexport const Modal: FC<Props> = ({\n  visible,\n  onClickBlur = () => undefined,\n  children,\n}) => {\n  const cancelEmitParentEvent = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n    },\n    [],\n  );\n  return (\n    <Container visible={visible} onClick={onClickBlur}>\n      <ModalWrapper onClick={cancelEmitParentEvent}>{children}</ModalWrapper>\n    </Container>\n  );\n};\n\nconst Container = styled.div<{ visible: boolean }>`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${color.blur};\n  transition: all 0.5s ease;\n  opacity: ${({ visible }) => (visible ? 1 : 0)};\n  z-index: ${({ visible }) => (visible ? 1001 : -1)};\n`;\n\nconst ModalWrapper = styled.div``;\n","import React, { FC, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { color } from '../../../assets/styles';\n\nimport { Modal } from './modal';\n\nexport const ModalSample: FC = () => {\n  const [isVisible, setVisible] = useState(false);\n\n  const handleClickModalButton = useCallback(() => {\n    setVisible(true);\n  }, []);\n\n  const handleClickBlur = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  return (\n    <>\n      <Button type=\"button\" onClick={handleClickModalButton}>\n        open modal\n      </Button>\n      <Modal visible={isVisible} onClickBlur={handleClickBlur}>\n        <ModalInner>\n          <CloseButton className=\"fa fa-times-circle\" />\n          <Title>Modal</Title>\n          <Description>This is Modal!!</Description>\n        </ModalInner>\n      </Modal>\n    </>\n  );\n};\n\nconst Button = styled.button`\n  border-radius: 6px;\n  background-color: ${color.primary};\n  padding: 6px 12px;\n  color: ${color.white};\n  text-align: center;\n`;\n\nconst ModalInner = styled.div`\n  position: relative;\n  margin: auto;\n  max-width: 360px;\n  width: calc(100vw - 16px);\n  max-height: 420px;\n  height: calc(100vh - 16px);\n  border-radius: 12px;\n  background-color: #ffffff;\n  padding: 32px 16px;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translateX(40%) translateY(-40%);\n  font-size: 50px;\n  color: ${color.gray};\n`;\n\nconst Title = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst Description = styled.p`\n  margin-top: 48px;\n  font-size: 16px;\n  text-align: center;\n`;\n","import React, { FC } from 'react';\nimport { PageProps } from 'gatsby';\nimport styled from 'styled-components';\nimport { media } from '../assets/styles';\n\nimport Layout from '../views/organisms/layouts/layout';\nimport SEO from '../views/organisms/layouts/seo';\n\nimport { HorizontalScrollSample } from '../views/organisms/modules/horizontal-scroll.sample';\nimport { ModalSample } from '../views/organisms/modules/modal.sample';\n\nconst GenericsComponentsPage: FC<PageProps> = () => (\n  <Layout>\n    <SEO title=\"Components\" />\n    <Container>\n      <ComponentContainer>\n        <Title>Horizontal Scroll</Title>\n        <HorizontalScrollSample />\n      </ComponentContainer>\n      <ComponentContainer>\n        <Title>Modal</Title>\n        <ModalSample />\n      </ComponentContainer>\n    </Container>\n  </Layout>\n);\n\nexport default GenericsComponentsPage;\n\nconst Container = styled.div`\n  padding: 32px 16px;\n  ${media.sp} {\n    padding: 24px 8px;\n  }\n`;\n\nconst ComponentContainer = styled.div`\n  & + & {\n    margin-top: 12px;\n  }\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 12px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n"],"sourceRoot":""}